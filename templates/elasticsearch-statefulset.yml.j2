apiVersion: apps/v1beta1
kind: StatefulSet
metadata:
  name: {{ application_name }}
  namespace: {{ namespace }}
  annotations:
    image.openshift.io/triggers: |
      [{
      "from": {
        "kind": "ImageStreamTag",
        "name": "{{ application_name }}:{{ es_version }}"
        },
        "fieldPath": "spec.template.spec.containers[?(@.name==\"elasticsearch\")].image"
      }]
spec:
  serviceName: {{ application_name }}
  replicas: {{ cluster_size }}
  selector:
    matchLabels:
      app: {{ application_name }}
  template:
    metadata:
      labels:
        app: {{ application_name }}
    spec:
      serviceAccountName: {{ application_name }}
      containers:
      - name: elasticsearch
        env:
        - name: SERVICE
          value: {{ application_name }}-cluster
        - name: LOG_LEVEL
          value: info
        - name: INSTANCE_RAM
          value: {{ es_memory_limit }}
        - name: NAMESPACE
          valueFrom:
            fieldRef:
              fieldPath: metadata.namespace
        image: ' '
        imagePullPolicy: IfNotPresent
        resources:
          limits:
            memory: {{ es_memory_limit }}
          requests:
            memory: {{ es_memory_limit }}
        ports:
        - containerPort: 9200
          name: api
        - containerPort: 9300
          name: cluster
        volumeMounts:
        - name: elasticsearch-persistent
          mountPath: /elasticsearch/persistent
{% if _apb_plan_id == 'ephemeral' %}
      volumes:
      - emptyDir: {}
        name: elasticsearch-persistent
{% else %}
  volumeClaimTemplates:
  - metadata:
      name: elasticsearch-persistent
    spec:
      accessModes: [ "ReadWriteOnce" ]
      resources:
        requests:
          storage: {{ es_pvc_size }}
{% endif %}
